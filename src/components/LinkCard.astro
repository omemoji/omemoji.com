---
import { Image } from "astro:assets";
import fetchMeta from "@/lib/fetchMeta";

interface Props {
  href: string;
}
const { href } = Astro.props;

const shortenURL = (url: string) => {
  const starts = url.indexOf("/") + 2;
  const leftShortenURL = url.substring(starts);
  const ends = leftShortenURL.indexOf("/");
  const URL = ends != -1 ? leftShortenURL.substring(0, ends) : leftShortenURL;
  return URL;
};

const { title, description, image } = await fetchMeta(href);
---

<div class="my-6">
  <a href={href} target="_blank" rel="noopener" class="hover:no-underline">
    <div
      class="hover:bg-gray-400/30 transition-colors w-full h-[120px] rounded-lg border-solid border border-[color:var(--border)] flex"
    >
      <div class="p-4 pr-0 flex overflow-hidden flex-col mr-auto w-full">
        <div
          class="text-[color:var(--fg)] whitespace-nowrap xs:text-lg font-bold overflow-hidden text-ellipsis"
        >
          {title}{" "}
        </div>
        <div
          class="text-[color:var(--quote)] whitespace-nowrap text-sm overflow-hidden m-0 text-ellipsis"
        >
          {description}
        </div>
        <div
          class="text-[color:var(--link)] whitespace-nowrap overflow-hidden mb-0 mt-auto pb-0 text-sm text-ellipsis"
        >
          {shortenURL(href)}
        </div>
      </div>

      {
        image.url !== "" && (
          <Image
            src={image.url}
            width={(image.width * 120) / image.height}
            height={120}
            quality={30}
            alt=""
            loading="lazy"
            class="h-[118px] max-w-[120px] xs:max-w-[240px] w-auto m-0 rounded-r-lg object-cover"
          />
        )
      }
    </div>
  </a>
</div>
